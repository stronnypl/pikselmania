{"version":3,"sources":["webpack://Falcon-theme/./node_modules/swiper/modules/virtual/virtual.js"],"names":[],"mappings":"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","file":"js/6aacb7206af45a6a343d.js","sourcesContent":["import $ from '../../shared/dom.js';\nimport { setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n\n    const $slideEl = params.renderSlide ? $(params.renderSlide.call(swiper, slide, index)) : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  }\n\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = slidesPerGroup + addSlidesBefore;\n    }\n\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n\n      emit('virtualUpdate');\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n\n          return slidesToRender;\n        }()\n      });\n\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n\n      return;\n    }\n\n    const prependIndexes = [];\n    const appendIndexes = [];\n\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n\n    appendIndexes.forEach(index => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach(index => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  }\n\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n\n    update(true);\n  }\n\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const $cachedEl = cache[cachedIndex];\n        const cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n\n        if (cachedElIndex) {\n          $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    swiper.virtual.slides = swiper.params.virtual.slides;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}"],"sourceRoot":""}