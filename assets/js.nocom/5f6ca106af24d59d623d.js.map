{"version":3,"sources":["webpack://Falcon-theme/./node_modules/swiper/modules/keyboard/keyboard.js"],"names":[],"mappings":"sKAGe,WAAkB,EAAM,CACrC,GAAI,CACF,SACA,eACA,KACA,QACE,EACJ,KAAM,GAAW,WACX,EAAS,WACf,EAAO,SAAW,CAChB,QAAS,IAEX,EAAa,CACX,SAAU,CACR,QAAS,GACT,eAAgB,GAChB,WAAY,MAIhB,WAAgB,EAAO,CACrB,GAAI,CAAC,EAAO,QAAS,OACrB,KAAM,CACJ,aAAc,GACZ,EACJ,GAAI,GAAI,EACJ,EAAE,eAAe,GAAI,EAAE,eAE3B,KAAM,GAAK,EAAE,SAAW,EAAE,SACpB,EAAa,EAAO,OAAO,SAAS,WACpC,EAAW,GAAc,IAAO,GAChC,EAAa,GAAc,IAAO,GAClC,EAAc,IAAO,GACrB,EAAe,IAAO,GACtB,EAAY,IAAO,GACnB,EAAc,IAAO,GAM3B,GAJI,CAAC,EAAO,gBAAmB,GAAO,gBAAkB,GAAgB,EAAO,cAAgB,GAAe,IAI1G,CAAC,EAAO,gBAAmB,GAAO,gBAAkB,GAAe,EAAO,cAAgB,GAAa,GACzG,MAAO,GAGT,GAAI,IAAE,UAAY,EAAE,QAAU,EAAE,SAAW,EAAE,UAIzC,IAAS,eAAiB,EAAS,cAAc,UAAa,GAAS,cAAc,SAAS,gBAAkB,SAAW,EAAS,cAAc,SAAS,gBAAkB,aAIjL,IAAI,EAAO,OAAO,SAAS,gBAAmB,IAAY,GAAc,GAAe,GAAgB,GAAa,GAAc,CAChI,GAAI,GAAS,GAEb,GAAI,EAAO,IAAI,QAAQ,IAAI,EAAO,OAAO,cAAc,OAAS,GAAK,EAAO,IAAI,QAAQ,IAAI,EAAO,OAAO,oBAAoB,SAAW,EACvI,OAGF,KAAM,GAAM,EAAO,IACb,EAAc,EAAI,GAAG,YACrB,EAAe,EAAI,GAAG,aACtB,EAAc,EAAO,WACrB,EAAe,EAAO,YACtB,EAAe,EAAO,IAAI,SAC5B,GAAK,GAAa,MAAQ,EAAO,IAAI,GAAG,YAC5C,KAAM,GAAc,CAAC,CAAC,EAAa,KAAM,EAAa,KAAM,CAAC,EAAa,KAAO,EAAa,EAAa,KAAM,CAAC,EAAa,KAAM,EAAa,IAAM,GAAe,CAAC,EAAa,KAAO,EAAa,EAAa,IAAM,IAE5N,OAAS,GAAI,EAAG,EAAI,EAAY,OAAQ,GAAK,EAAG,CAC9C,KAAM,GAAQ,EAAY,GAE1B,GAAI,EAAM,IAAM,GAAK,EAAM,IAAM,GAAe,EAAM,IAAM,GAAK,EAAM,IAAM,EAAc,CACzF,GAAI,EAAM,KAAO,GAAK,EAAM,KAAO,EAAG,SAEtC,EAAS,IAIb,GAAI,CAAC,EAAQ,OAGX,EAAO,eACL,KAAY,GAAc,GAAe,IAC3C,CAAI,EAAE,eAAgB,EAAE,iBAAsB,EAAE,YAAc,IAG3D,KAAc,IAAiB,CAAC,GAAQ,IAAY,IAAgB,IAAK,EAAO,YAChF,KAAY,IAAgB,CAAC,GAAQ,IAAc,IAAiB,IAAK,EAAO,aAEjF,KAAY,GAAc,GAAa,IACzC,CAAI,EAAE,eAAgB,EAAE,iBAAsB,EAAE,YAAc,IAG5D,IAAc,IAAa,EAAO,YAClC,IAAY,IAAW,EAAO,aAGpC,EAAK,WAAY,IAInB,YAAkB,CACZ,EAAO,SAAS,SACpB,C,GAAA,KAAE,GAAU,GAAG,UAAW,GAC1B,EAAO,SAAS,QAAU,IAG5B,YAAmB,CACb,CAAC,EAAO,SAAS,SACrB,C,GAAA,KAAE,GAAU,IAAI,UAAW,GAC3B,EAAO,SAAS,QAAU,IAG5B,EAAG,OAAQ,IAAM,CACX,EAAO,OAAO,SAAS,SACzB,MAGJ,EAAG,UAAW,IAAM,CACd,EAAO,SAAS,SAClB,MAGJ,OAAO,OAAO,EAAO,SAAU,CAC7B,SACA","file":"js/5f6ca106af24d59d623d.js","sourcesContent":["/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nexport default function Keyboard(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on,\n    emit\n  } = _ref;\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40; // Directions locks\n\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false; // Check that swiper should be inside of visible area of window\n\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n\n      const $el = swiper.$el;\n      const swiperWidth = $el[0].clientWidth;\n      const swiperHeight = $el[0].clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n\n          inView = true;\n        }\n      }\n\n      if (!inView) return undefined;\n    }\n\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n\n    emit('keyPress', kc);\n    return undefined;\n  }\n\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}"],"sourceRoot":""}