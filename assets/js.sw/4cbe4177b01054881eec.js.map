{"version":3,"sources":["webpack://modern-prestashop-build-tool/./node_modules/bootstrap/js/src/util.js","webpack://modern-prestashop-build-tool/./node_modules/popper.js/dist/esm/popper.js"],"names":[],"mappings":"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","file":"js/4cbe4177b01054881eec.js","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.0): util.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\n\n/**\n * ------------------------------------------------------------------------\n * Private TransitionEnd Helpers\n * ------------------------------------------------------------------------\n */\n\nconst TRANSITION_END = 'transitionend'\nconst MAX_UID = 1000000\nconst MILLISECONDS_MULTIPLIER = 1000\n\n// Shoutout AngusCroll (https://goo.gl/pxwQGp)\nfunction toType(obj) {\n  if (obj === null || typeof obj === 'undefined') {\n    return `${obj}`\n  }\n\n  return {}.toString.call(obj).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\nfunction getSpecialTransitionEndEvent() {\n  return {\n    bindType: TRANSITION_END,\n    delegateType: TRANSITION_END,\n    handle(event) {\n      if ($(event.target).is(this)) {\n        return event.handleObj.handler.apply(this, arguments) // eslint-disable-line prefer-rest-params\n      }\n\n      return undefined\n    }\n  }\n}\n\nfunction transitionEndEmulator(duration) {\n  let called = false\n\n  $(this).one(Util.TRANSITION_END, () => {\n    called = true\n  })\n\n  setTimeout(() => {\n    if (!called) {\n      Util.triggerTransitionEnd(this)\n    }\n  }, duration)\n\n  return this\n}\n\nfunction setTransitionEndSupport() {\n  $.fn.emulateTransitionEnd = transitionEndEmulator\n  $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent()\n}\n\n/**\n * --------------------------------------------------------------------------\n * Public Util Api\n * --------------------------------------------------------------------------\n */\n\nconst Util = {\n  TRANSITION_END: 'bsTransitionEnd',\n\n  getUID(prefix) {\n    do {\n      prefix += ~~(Math.random() * MAX_UID) // \"~~\" acts like a faster Math.floor() here\n    } while (document.getElementById(prefix))\n\n    return prefix\n  },\n\n  getSelectorFromElement(element) {\n    let selector = element.getAttribute('data-target')\n\n    if (!selector || selector === '#') {\n      const hrefAttr = element.getAttribute('href')\n      selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : ''\n    }\n\n    try {\n      return document.querySelector(selector) ? selector : null\n    } catch (_) {\n      return null\n    }\n  },\n\n  getTransitionDurationFromElement(element) {\n    if (!element) {\n      return 0\n    }\n\n    // Get transition-duration of the element\n    let transitionDuration = $(element).css('transition-duration')\n    let transitionDelay = $(element).css('transition-delay')\n\n    const floatTransitionDuration = parseFloat(transitionDuration)\n    const floatTransitionDelay = parseFloat(transitionDelay)\n\n    // Return 0 if element or transition duration is not found\n    if (!floatTransitionDuration && !floatTransitionDelay) {\n      return 0\n    }\n\n    // If multiple durations are defined, take the first\n    transitionDuration = transitionDuration.split(',')[0]\n    transitionDelay = transitionDelay.split(',')[0]\n\n    return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\n  },\n\n  reflow(element) {\n    return element.offsetHeight\n  },\n\n  triggerTransitionEnd(element) {\n    $(element).trigger(TRANSITION_END)\n  },\n\n  supportsTransitionEnd() {\n    return Boolean(TRANSITION_END)\n  },\n\n  isElement(obj) {\n    return (obj[0] || obj).nodeType\n  },\n\n  typeCheckConfig(componentName, config, configTypes) {\n    for (const property in configTypes) {\n      if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\n        const expectedTypes = configTypes[property]\n        const value = config[property]\n        const valueType = value && Util.isElement(value) ?\n          'element' : toType(value)\n\n        if (!new RegExp(expectedTypes).test(valueType)) {\n          throw new Error(\n            `${componentName.toUpperCase()}: ` +\n            `Option \"${property}\" provided type \"${valueType}\" ` +\n            `but expected type \"${expectedTypes}\".`)\n        }\n      }\n    }\n  },\n\n  findShadowRoot(element) {\n    if (!document.documentElement.attachShadow) {\n      return null\n    }\n\n    // Can find the shadow root otherwise it'll return the document\n    if (typeof element.getRootNode === 'function') {\n      const root = element.getRootNode()\n      return root instanceof ShadowRoot ? root : null\n    }\n\n    if (element instanceof ShadowRoot) {\n      return element\n    }\n\n    // when we don't find a shadow root\n    if (!element.parentNode) {\n      return null\n    }\n\n    return Util.findShadowRoot(element.parentNode)\n  },\n\n  jQueryDetection() {\n    if (typeof $ === 'undefined') {\n      throw new TypeError('Bootstrap\\'s JavaScript requires jQuery. jQuery must be included before Bootstrap\\'s JavaScript.')\n    }\n\n    const version = $.fn.jquery.split(' ')[0].split('.')\n    const minMajor = 1\n    const ltMajor = 2\n    const minMinor = 9\n    const minPatch = 1\n    const maxMajor = 4\n\n    if (version[0] < ltMajor && version[1] < minMinor || version[0] === minMajor && version[1] === minMinor && version[2] < minPatch || version[0] >= maxMajor) {\n      throw new Error('Bootstrap\\'s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0')\n    }\n  }\n}\n\nUtil.jQueryDetection()\nsetTransitionEndSupport()\n\nexport default Util\n","/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.16.1\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\n\nvar timeoutDuration = function () {\n  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\n  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n      return 1;\n    }\n  }\n  return 0;\n}();\n\nfunction microtaskDebounce(fn) {\n  var called = false;\n  return function () {\n    if (called) {\n      return;\n    }\n    called = true;\n    window.Promise.resolve().then(function () {\n      called = false;\n      fn();\n    });\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nvar supportsMicroTasks = isBrowser && window.Promise;\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var window = element.ownerDocument.defaultView;\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body;\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body;\n    case '#document':\n      return element.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\n/**\n * Returns the reference node of the reference object, or the reference object itself.\n * @method\n * @memberof Popper.Utils\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\n * @returns {Element} parent\n */\nfunction getReferenceNode(reference) {\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\n}\n\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nfunction isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  var noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  var offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = element.ownerDocument.documentElement;\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);\n}\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\n}\n\nfunction getWindowSizes(document) {\n  var body = document.body;\n  var html = document.documentElement;\n  var computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\nvar defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } else {\n      rect = element.getBoundingClientRect();\n    }\n  } catch (e) {}\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  var width = sizes.width || element.clientWidth || result.width;\n  var height = sizes.height || element.clientHeight || result.height;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var isIE10 = isIE(10);\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = parseFloat(styles.borderTopWidth);\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if (fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = parseFloat(styles.marginTop);\n    var marginLeft = parseFloat(styles.marginLeft);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var html = element.ownerDocument.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  var parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nfunction getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  var el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n\n  // NOTE: 1 DOM access here\n\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  var isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var window = element.ownerDocument.defaultView;\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier['function']) {\n      // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicitly asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\n/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nfunction getWindow(element) {\n  var ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nfunction getRoundedOffsets(data, shouldRound) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n  var round = Math.round,\n      floor = Math.floor;\n\n  var noRound = function noRound(v) {\n    return v;\n  };\n\n  var referenceWidth = round(reference.width);\n  var popperWidth = round(popper.width);\n\n  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  var isVariation = data.placement.indexOf('-') !== -1;\n  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\n  var verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right)\n  };\n}\n\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  var _data$offsets$arrow;\n\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\n  var side = sideCapitalized.toLowerCase();\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  var css = getStyleComputedProperty(data.instance.popper);\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    // flips variation if popper content overflows boundaries\n    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);\n\n    var flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  var transformProp = getSupportedPropertyName('transform');\n  var popperStyles = data.instance.popper.style; // assignment to help minification\n  var top = popperStyles.top,\n      left = popperStyles.left,\n      transform = popperStyles[transformProp];\n\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults = {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedules an update. It will run on the next UI update available.\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults;\n\nexport default Popper;\n//# sourceMappingURL=popper.js.map\n"],"sourceRoot":""}