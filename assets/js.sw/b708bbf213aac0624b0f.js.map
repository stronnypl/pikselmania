{"version":3,"sources":["webpack://modern-prestashop-build-tool/./node_modules/swiper/modules/parallax/parallax.js"],"names":[],"mappings":"6LACe,WAAkB,EAAM,CACrC,GAAI,CACF,SACA,eACA,MACE,EACJ,EAAa,CACX,SAAU,CACR,QAAS,MAIb,KAAM,GAAe,CAAC,EAAI,IAAa,CACrC,KAAM,CACJ,OACE,EACE,EAAM,QAAE,GACR,EAAY,EAAM,GAAK,EACvB,EAAI,EAAI,KAAK,yBAA2B,IAC9C,GAAI,GAAI,EAAI,KAAK,0BACb,EAAI,EAAI,KAAK,0BACjB,KAAM,GAAQ,EAAI,KAAK,8BACjB,EAAU,EAAI,KAAK,gCAyBzB,GAvBI,GAAK,EACP,GAAI,GAAK,IACT,EAAI,GAAK,KACA,EAAO,eAChB,GAAI,EACJ,EAAI,KAEJ,GAAI,EACJ,EAAI,KAGF,EAAE,QAAQ,MAAQ,EACpB,EAAI,GAAG,SAAS,EAAG,IAAM,EAAW,KAEpC,EAAI,GAAG,EAAI,EAAW,MAGpB,EAAE,QAAQ,MAAQ,EACpB,EAAI,GAAG,SAAS,EAAG,IAAM,KAEzB,EAAI,GAAG,EAAI,MAGT,MAAO,IAAY,aAAe,IAAY,KAAM,CACtD,KAAM,GAAiB,EAAW,GAAU,GAAM,GAAI,KAAK,IAAI,IAC/D,EAAI,GAAG,MAAM,QAAU,EAGzB,GAAI,MAAO,IAAU,aAAe,IAAU,KAC5C,EAAI,UAAU,eAAe,MAAM,eAC9B,CACL,KAAM,GAAe,EAAS,GAAQ,GAAM,GAAI,KAAK,IAAI,IACzD,EAAI,UAAU,eAAe,MAAM,iBAAiB,QAIlD,EAAe,IAAM,CACzB,KAAM,CACJ,MACA,SACA,WACA,YACE,EACJ,EAAI,SAAS,4IAA4I,KAAK,GAAM,CAClK,EAAa,EAAI,KAEnB,EAAO,KAAK,CAAC,EAAS,IAAe,CACnC,GAAI,GAAgB,EAAQ,SAExB,EAAO,OAAO,eAAiB,GAAK,EAAO,OAAO,gBAAkB,QACtE,IAAiB,KAAK,KAAK,EAAa,GAAK,EAAY,GAAS,OAAS,IAG7E,EAAgB,KAAK,IAAI,KAAK,IAAI,EAAe,IAAK,GACtD,QAAE,GAAS,KAAK,4IAA4I,KAAK,GAAM,CACrK,EAAa,EAAI,QAKjB,EAAgB,SAAU,EAAU,CACpC,IAAa,QACf,GAAW,EAAO,OAAO,OAG3B,KAAM,CACJ,OACE,EACJ,EAAI,KAAK,4IAA4I,KAAK,GAAc,CACtK,KAAM,GAAc,QAAE,GACtB,GAAI,GAAmB,SAAS,EAAY,KAAK,iCAAkC,KAAO,EACtF,IAAa,GAAG,GAAmB,GACvC,EAAY,WAAW,MAI3B,EAAG,aAAc,IAAM,CACjB,CAAC,EAAO,OAAO,SAAS,SAC5B,GAAO,OAAO,oBAAsB,GACpC,EAAO,eAAe,oBAAsB,MAE9C,EAAG,OAAQ,IAAM,CACX,CAAC,EAAO,OAAO,SAAS,SAC5B,MAEF,EAAG,eAAgB,IAAM,CACnB,CAAC,EAAO,OAAO,SAAS,SAC5B,MAEF,EAAG,gBAAiB,CAAC,EAAS,IAAa,CACrC,CAAC,EAAO,OAAO,SAAS,SAC5B,EAAc","file":"js/b708bbf213aac0624b0f.js","sourcesContent":["import $ from '../../shared/dom.js';\nexport default function Parallax(_ref) {\n  let {\n    swiper,\n    extendParams,\n    on\n  } = _ref;\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      $el[0].style.opacity = currentOpacity;\n    }\n\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  };\n\n  const setTranslate = () => {\n    const {\n      $el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\n      setTransform(el, progress);\n    });\n    slides.each((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\n        setTransform(el, slideProgress);\n      });\n    });\n  };\n\n  const setTransition = function (duration) {\n    if (duration === void 0) {\n      duration = swiper.params.speed;\n    }\n\n    const {\n      $el\n    } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(parallaxEl => {\n      const $parallaxEl = $(parallaxEl);\n      let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      $parallaxEl.transition(parallaxDuration);\n    });\n  };\n\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}"],"sourceRoot":""}